TopLevel
	= Persons
	;

_
	= [ \t\n\r]*
	;

Persons
	= BeginArray <{ Person^ (ValueSep Person^)*  #persons }> EndArray
	;

Person
	= BeginObject <{ Name^ ValueSep Id^ (ValueSep NPerson^)? #person }> EndObject
	;

NPerson
	= '"nperson"' MemberSep <{ Persons^ #nperson}>
	;

BeginObject
	= _ '{' _
	;

EndObject
	= _ '}' _
	;

BeginArray
	= _ '[' _
	;

EndArray
	= _ ']' _
	;

ValueSep
	= _ ',' _
	;

MemberSep
	= _ ':' _
	;

String
	= DoubleQuote ('\\"' / !DoubleQuote .)* DoubleQuote
	;

DoubleQuote
	= '"'
	;

Name
	= '"name"' MemberSep <{ String^ #name }>
	;

Id
	= '"id"' MemberSep <{ Number^ #id }>
	;

// Number literal definition
Number
	= Minus? Int Frac? Exp?
	;

Minus
	= '-'
	;
Int
	= Zero
	/ Digit1_9 DIGIT*
	;
Zero
	= '0'
	;
Digit1_9
	= [1-9]
	;
DIGIT
	= [0-9]
	;
Frac
	= DecimalPoint DIGIT+
	;
DecimalPoint
	= '.'
	;
Exp
	= E (Minus / Plus)? DIGIT+
	;
E
	= [eE]
	;
Plus
	= '+'
	;